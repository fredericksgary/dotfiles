NIX_FILE=/etc/profile.d/nix.sh
if [ -f "$NIX_FILE" ]
then
  source $NIX_FILE
fi

SELF=$(readlink -f $BASH_SOURCE)
MYBIN=`dirname $SELF`/bin
export PATH=~/bin:$MYBIN:$PATH
export EDITOR=edit

cdl(){ cd $1; ls; }
cdll(){ cd $1; ls -l; }
cdlla(){ cd $1; ls -la; }
alias lsl="ls -l"
alias lsa="ls -a"
alias lsla="ls -la"
alias lslh="ls -lh"
alias wcl="wc -l"
alias rgrep="grep -r"
alias today="date +%Y-%m-%d"
alias jqu="jq --unbuffered"
alias pyc="ping -c 1 yahoo.com"
alias emc="emacsclient"

# git shortcuts
alias gs="git status"
alias glg="git lg"
alias gl="git lg"
alias gc="git commit"
alias ga="git add"
alias gco="git checkout"
alias gd="git diff"
alias gr="git reset"
alias grh="git reset HEAD"
alias gpp="git pull && git push"
alias gpddraagp="git pull --rebase && git push"

# Navigation
function ..(){ for ((j=${1:-1},i=0;i<j;i++));do builtin cd ..;done;}
alias ...='.. 2'
alias ....='.. 3'
alias .....='.. 4'
alias ......='.. 5'
alias cd-="cd -"

# What does this even do?
export LESS="-R"

alias txa="tmux attach -t"


mkcd(){ mkdir -p $1; cd $1; }
tmp(){ pushd `mktemp -d --tmpdir=/dev/shm`; }
d(){ cd `devdir $1`; }



# Assemble ssh config from components
cat ~/.ssh/config.* > ~/.ssh/config
chmod 600 ~/.ssh/config

# Showing the runtime of the last command; adapted from
# http://jakemccrary.com/blog/2015/05/03/put-the-last-commands-run-time-in-your-bash-prompt/

function timer_start {
  timer=${timer:-$SECONDS}
}

function timer_stop {
  the_seconds=$(($SECONDS - $timer))

  # Hide results for <2sec to reduce noise
  if [[ $the_seconds > 1 ]]; then
    timer_show="`format-duration seconds $the_seconds`"
  else
    timer_show=""
  fi

  unset timer
}

trap 'timer_start' DEBUG

# Prompt
parse_git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'
}

PROMPT_COMMAND=__prompt_command

__prompt_command() {
  local EXIT="$?"
  timer_stop
  PS1=""

  local RCol='\[\e[0m\]'

  local Yellow='\[\e[0;33m\]'
  local Orange='\[\e[01;31m\]'
  local Red='\[\e[0;31m\]'
  local Gre='\[\e[0;32m\]'
  local Grey='\[\e[01;32m\]'
  local BYel='\[\e[1;33m\]'
  local BBlu='\[\e[1;34m\]'
  local LightGrey='\[\e[01;34m\]'
  local Pur='\[\e[0;35m\]'
  local Theme=$Yellow
  SQUARE="$Theme●$RCol"
  DOT="${Theme} ┃ ${RCol}"
  GIT_BRANCH=$(parse_git_branch)
  if [ -z "$GIT_BRANCH" ]; then
      foo="bar"
  else
      GIT_BRANCH=" $SQUARE $GIT_BRANCH"
  fi

  JOBS=`jobs | wc -l`
  if [ $JOBS -eq "0" ]; then
      JOBS=""
  else
      if [ $JOBS -eq "1" ]; then
          JOBS=" $SQUARE 1 job"
      else
          JOBS=" $SQUARE $JOBS jobs"
      fi
  fi

  if [ $EXIT -eq "0" ]; then
      SHOW_EXIT=""
  else
      SHOW_EXIT=" $SQUARE $EXIT"
  fi

  THE_TIMER=${timer_show}
  if [ -z $THE_TIMER ]; then
      foo="bar"
  else
      THE_TIMER=" $SQUARE $THE_TIMER"
  fi

  THEWD="$PWD"
  [[ "$THEWD" =~ ^"$HOME"(/|$) ]] && THEWD="~${THEWD#$HOME}"

  if [ $EXIT -eq "0" ]; then
      SHOW_EXIT=""
  else
      SHOW_EXIT=" $SQUARE ${Red}$EXIT${RCol}"
  fi
  LINE2="$Theme◀$RCol $HOSTNAME $SQUARE $THEWD$JOBS$GIT_BRANCH$SHOW_EXIT$THE_TIMER $Theme▶ $RCol"
  LINE3="${Theme}\$${RCol} "

  PS1+="\n$LINE2\n$LINE3"
}
