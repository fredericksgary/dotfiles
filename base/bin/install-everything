#!/usr/bin/env bash

# script for building everything I can't easily get via a package
# manager (either at all, or at least a recent-enough version
# of). essentially it's an ad-hoc, informally-specified, bug-ridden,
# slow implementation of half of nix.

# everything should be installed in userland, in ~/.install-everything with symlinks
# from ~/bin.

set -Ceou pipefail

if [ $# -eq 0 ]
then
    echo "USAGE: install-everything [all | <thing>]" 1>&2
    exit 1
fi

sudo apt-get update
sudo apt-get install -y wget build-essential unzip

# wtf; using bsdtar instead of tar in this script because
# of https://github.com/coreos/bugs/issues/1095
sudo apt-get install -y --no-install-recommends bsdtar

# sudo apt-get install -y wget build-essential asciidoc docbook2x libssl-dev \
#      libcurl4-openssl-dev libexpat1-dev gettext &&
# sudo apt-get install tree

BUILDDIRBASE=~/.install-everything
mkdir -p ~/bin

while [ $# -ne 0 ]
do

  ###
  ### Misc
  ###

  if [ "$1" == "all" -o "$1" == "server" -o "$1" == "misc" ]
  then
      # better to put latex stuff in one place or something?
      sudo apt-get install -y tree htop texlive-latex-extra \
           python-pygments xclip rlwrap xautolock \
           net-tools # net-tools has netstat, used by remote-emacs
  fi

  ###
  ### Emacs
  ###

  # not including "server" here since I only install emacs on special
  # servers
  if [ "$1" == "all" -o "$1" == "emacs" ]
  then
    sudo apt-get install -y libncurses-dev asciidoc docbook2x libgnutls28-dev autoconf
    # weird: https://emacs.stackexchange.com/questions/41778/emacs-26-1-configure-script-doesnt-like-the-gnutls-version-on-a-redhat-sytem
    sudo apt-get install -y pkg-config
    BUILDDIR=$BUILDDIRBASE/emacs
    rm -rf $BUILDDIR && mkdir -p $BUILDDIR && cd $BUILDDIR
    # shallow because the emacs repo is super big/old
    git clone --shallow-since=2019-04-01 git://git.sv.gnu.org/emacs.git $BUILDDIR/git-repo
    cd $BUILDDIR/git-repo
    git checkout bc0adf112d82a9b89f858f80e04f1ee2f401fa05
    ./autogen.sh
    ./configure \
        --without-x \
        --prefix=$BUILDDIR/install \
        --bindir=$BUILDDIR/bin
    make
    make install
    make clean
    rm -f ~/bin/emacs.bin
    ln -s $BUILDDIR/bin ~/bin/emacs.bin
  fi

  ###
  ### Git
  ###

  if [ "$1" == "all" -o "$1" == "server" -o "$1" == "git" ]
  then
    sudo apt-get install -y asciidoc docbook2x libssl-dev libcurl4-openssl-dev libexpat1-dev gettext zlib1g-dev
    BUILDDIR=$BUILDDIRBASE/git
    rm -rf $BUILDDIR && mkdir -p $BUILDDIR && cd $BUILDDIR
    wget https://github.com/git/git/archive/v2.14.1.zip
    echo '846e55e4fd8501db71b6b57ff6a1554a8a19a2ac20dc4c0864eeaed50a481122  v2.14.1.zip' | sha256sum -c
    unzip v2.14.1.zip
    cd git-2.14.1
    INSTALLDIR=$BUILDDIR/install
    mkdir $INSTALLDIR
    make prefix=$INSTALLDIR all doc info
    # skipping `install-html` because who even uses that
    make prefix=$INSTALLDIR install install-doc install-info
    cd -
    rm -f ~/bin/git.bin
    ln -s $INSTALLDIR/bin ~/bin/git.bin
  fi

  ###
  ### NodeJS
  ###

  if [ "$1" == "all" -o "$1" == "server" -o "$1" == "nodejs" ]
  then
    BUILDDIR=$BUILDDIRBASE/nodejs
    rm -rf $BUILDDIR && mkdir -p $BUILDDIR && cd $BUILDDIR
    wget https://nodejs.org/download/release/v9.6.1/node-v9.6.1-linux-x64.tar.xz
    echo 'd38f1707faccc54fae3cb201c25b02c4a3474d2c409c64f2a1d08925b238f8ad  node-v9.6.1-linux-x64.tar.xz' | \
        sha256sum -c
    bsdtar xJf node-v9.6.1-linux-x64.tar.xz
    rm -f ~/bin/nodejs.bin
    ln -s $BUILDDIR/node-v9.6.1-linux-x64/bin ~/bin/nodejs.bin
  fi

  ###
  ### PhantomJS
  ###

  if [ "$1" == "all" -o "$1" == "server" -o "$1" == "phantomjs" ]
  then
    BUILDDIR=$BUILDDIRBASE/phantomjs
    rm -rf $BUILDDIR && mkdir -p $BUILDDIR && cd $BUILDDIR
    wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2
    echo '86dd9a4bf4aee45f1a84c9f61cf1947c1d6dce9b9e8d2a907105da7852460d2f  ./phantomjs-2.1.1-linux-x86_64.tar.bz2' | \
        sha256sum -c
    bsdtar xf phantomjs-2.1.1-linux-x86_64.tar.bz2
    rm -f ~/bin/phantomjs
    ln -s $BUILDDIR/phantomjs-2.1.1-linux-x86_64/bin/phantomjs ~/bin/phantomjs
  fi

  ###
  ### Python 3
  ###

  if [ "$1" == "all" -o "$1" == "server" -o "$1" == "python3" ]
  then
    BUILDDIR=$BUILDDIRBASE/python3
    rm -rf $BUILDDIR && mkdir -p $BUILDDIR && cd $BUILDDIR
    wget https://www.python.org/ftp/python/3.6.4/Python-3.6.4.tgz
    echo '7dc453e1a93c083388eb1a23a256862407f8234a96dc4fae0fc7682020227486  Python-3.6.4.tgz' | \
        sha256sum -c
    tar xzf Python-3.6.4.tgz
    cd Python-3.6.4
    INSTALLDIR=$BUILDDIR/install/python-3.6.4
    ./configure --prefix=$INSTALLDIR && make && make install
    rm -f ~/bin/python3.bin
    ln -s $INSTALLDIR/bin ~/bin/python3.bin
  fi

  ###
  ### Java
  ###

  if [ "$1" == "all" -o "$1" == "server" -o "$1" == "java" ]
  then
      # JDKs seem hard to get in an automated fashion, so I just
      # assume that appropriate tarballs have already been acquired
      install_java(){
          version="$1"
          tarball_path="$2"
          sha256="$3"

          BUILDDIR=$BUILDDIRBASE/tmp
          rm -rf $BUILDDIR && mkdir -p $BUILDDIR && cd $BUILDDIR
          if [[ ! -f "$tarball_path" ]]; then
              >&2 echo "Can't find expected tarball $tarball_path"
              exit 1
          fi
          echo "$sha256  $tarball_path" | sha256sum -c >/dev/null
          bsdtar xzf $tarball_path
          TARBALL="$(ls)"
          cd ..
          rm -rf $TARBALL
          mv tmp/$TARBALL .
          SYMLINK=jdk-$version
          rm -f $SYMLINK && ln -s $TARBALL $SYMLINK
          echo $PWD/$SYMLINK/bin
      }
      install_java \
          8 \
          ~/.install-everything/jdk-tarballs/jdk-8u191-linux-x64.tar.gz \
          53c29507e2405a7ffdbba627e6d64856089b094867479edc5ede4105c1da0d65
      JAVA_11_BIN="$(install_java \
                         11 \
                         ~/.install-everything/jdk-tarballs/jdk-11.0.1_linux-x64_bin.tar.gz \
                         e7fd856bacad04b6dbf3606094b6a81fa9930d6dbb044bbd787be7ea93abc885)"
      JAVA_12_BIN="$(install_java \
                         12 \
                         ~/.install-everything/jdk-tarballs/jdk-12.0.1_linux-x64_bin.tar.gz \
                         9fd6dcdaf2cfca7da59e39b009a0f5bcd53bec2fb16105f7ca8d689cdab68d75)"

      rm -f ~/bin/jdk.bin
      ln -s $JAVA_11_BIN ~/bin/jdk.bin
  fi

  ###
  ### Maven 3
  ###

  if [ "$1" == "all" -o "$1" == "server" -o "$1" == "maven" ]
  then
    BUILDDIR=$BUILDDIRBASE/maven
    rm -rf $BUILDDIR && mkdir -p $BUILDDIR && cd $BUILDDIR
    wget http://apache.mirrors.tds.net/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz
    echo '6e3e9c949ab4695a204f74038717aa7b2689b1be94875899ac1b3fe42800ff82  apache-maven-3.3.9-bin.tar.gz' | \
        sha256sum -c
    bsdtar xzf apache-maven-3.3.9-bin.tar.gz
    rm -f ~/bin/mvn
    ln -s $BUILDDIR/apache-maven-3.3.9/bin/mvn ~/bin/mvn
  fi

  ###
  ### Gradle
  ###

  if [ "$1" == "all" -o "$1" == "server" -o "$1" == "gradle" ]
  then
    BUILDDIR=$BUILDDIRBASE/gradle
    rm -rf $BUILDDIR && mkdir -p $BUILDDIR && cd $BUILDDIR
    wget https://services.gradle.org/distributions/gradle-5.5.1-bin.zip
    echo '222a03fcf2fcaf3691767ce9549f78ebd4a77e73f9e23a396899fb70b420cd00  gradle-5.5.1-bin.zip' | \
        sha256sum -c
    unzip gradle-5.5.1-bin.zip
    rm -f ~/bin/gradle
    ln -s $BUILDDIR/gradle-5.5.1/bin/gradle ~/bin/gradle
  fi

  ###
  ### jq
  ###

  if [ "$1" == "all" -o "$1" == "server" -o "$1" == "jq" ]
  then
    BUILDDIR=$BUILDDIRBASE/jq
    rm -rf $BUILDDIR && mkdir -p $BUILDDIR && cd $BUILDDIR
    wget https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
    echo 'af986793a515d500ab2d35f8d2aecd656e764504b789b66d7e1a0b727a124c44  jq-linux64' | \
        sha256sum -c
    EX=$BUILDDIR/jq-linux64
    chmod +x $EX
    rm -f ~/bin/jq
    ln -s $EX ~/bin/jq
  fi

  ###
  ### lein
  ###

  if [ "$1" == "all" -o "$1" == "server" -o "$1" == "lein" ]
  then
    BUILDDIR=$BUILDDIRBASE/lein
    rm -rf $BUILDDIR && mkdir -p $BUILDDIR && cd $BUILDDIR
    wget https://raw.githubusercontent.com/technomancy/leiningen/2.9.1/bin/lein
    echo '32acacc8354627724d27231bed8fa190d7df0356972e2fd44ca144c084ad4fc7  lein' | \
        sha256sum -c
    EX=$BUILDDIR/lein
    chmod +x $EX
    rm -f ~/bin/lein
    ln -s $EX ~/bin/lein
  fi

  ###
  ### Clojure
  ###

  if [ "$1" == "all" -o "$1" == "server" -o "$1" == "clojure" ]
  then
    BUILDDIR=$BUILDDIRBASE/clojure
    rm -rf $BUILDDIR && mkdir -p $BUILDDIR && cd $BUILDDIR
    wget https://download.clojure.org/install/clojure-tools-1.9.0.381.tar.gz
    echo 'f1266ba95784e594bb9b643258b417ef03b0e24b995ddb3a7514ae6daa7458a1  clojure-tools-1.9.0.381.tar.gz' | \
        sha256sum -c
    tar xzf clojure-tools-1.9.0.381.tar.gz
    cd clojure-tools
    ./install.sh $BUILDDIR
    cd -
    BIN=$BUILDDIR/bin
    rm -f ~/bin/clojure.bin
    ln -s $BIN ~/bin/clojure.bin
  fi

  ###
  ### dynamic-colors
  ###

  if [ "$1" == "all" -o "$1" == "dynamic-colors" ]
  then
    BUILDDIR=$BUILDDIRBASE/dynamic-colors
    rm -rf $BUILDDIR
    git clone git@github.com:gfredericks/dynamic-colors.git $BUILDDIR
    cd $BUILDDIR
    git checkout 55c539b48c92f43ea121f906ca1470762ddfe13b
    BIN=$BUILDDIR/bin
    rm -f ~/bin/dynamic-colors.bin
    ln -s $BIN ~/bin/dynamic-colors.bin
    rm -f ~/.dynamic-colors
    ln -s $BUILDDIR ~/.dynamic-colors
  fi

  ###
  ### extra stuff!
  ###

  if [ "$1" == "all" -o "$1" == "extras" ]
  then
    sudo apt-get install -y imagemagick graphviz curl \
         texlive{,-base,-latex-recommended,-latex-extra,-full} \
         bsdgames inkscape xterm
  fi

  shift
done

echo  $'\n\n---------------------\nInstalled successfully!'
