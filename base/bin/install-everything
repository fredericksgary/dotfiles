#!/usr/bin/env bash

# script for building everything I can't easily get via a package
# manager. essentially it's an ad-hoc, informally-specified,
# bug-ridden, slow implementation of half of nix.

# everything should be installed in userland, in ~/.install-everything with symlinks
# from ~/bin.

set -Ceou pipefail

sudo apt-get update
sudo apt-get install -y wget build-essential unzip

# wtf; using bsdtar instead of tar in this script because
# of https://github.com/coreos/bugs/issues/1095
sudo apt-get install -y --no-install-recommends bsdtar

# sudo apt-get install -y wget build-essential asciidoc docbook2x libssl-dev \
#      libcurl4-openssl-dev libexpat1-dev gettext &&
# sudo apt-get install tree

BUILDDIRBASE=~/.install-everything
mkdir -p ~/bin

if [ $# -eq 0 ]
then
    echo "USAGE: install-everything [all | <thing>]" 1>&2
    exit 1
fi

while [ $# -ne 0 ]
do

  ###
  ### Misc
  ###

  if [ "$1" == "all" -o "$1" == "server" -o "$1" == "misc" ]
  then
      # better to put latex stuff in one place or something?
    sudo apt-get install -y tree htop texlive-latex-extra python-pygments xclip rlwrap xautolock
  fi

  ###
  ### Emacs
  ###

  # not including "server" here since I only install emacs on special
  # servers
  if [ "$1" == "all" -o "$1" == "emacs" ]
  then
    sudo apt-get install -y libncurses-dev asciidoc docbook2x libgnutls28-dev autoconf
    BUILDDIR=$BUILDDIRBASE/emacs
    rm -rf $BUILDDIR && mkdir -p $BUILDDIR && cd $BUILDDIR
    # shallow because the emacs repo is super big/old
    git clone --shallow-since=2019-04-01 git://git.sv.gnu.org/emacs.git $BUILDDIR
    cd $BUILDDIR
    git checkout 5a4f58f7eef542a61663360866f69f477472090c
    ./autogen.sh
    ./configure \
        --without-x \
        --prefix=$BUILDDIR/install \
        --bindir=$BUILDDIR/bin
    make
    make install
    make clean
    rm -f ~/bin/emacs.bin
    ln -s $BUILDDIR/bin ~/bin/emacs.bin
  fi

  ###
  ### Git
  ###

  if [ "$1" == "all" -o "$1" == "server" -o "$1" == "git" ]
  then
    sudo apt-get install -y asciidoc docbook2x libssl-dev libcurl4-openssl-dev libexpat1-dev gettext zlib1g-dev
    BUILDDIR=$BUILDDIRBASE/git
    rm -rf $BUILDDIR && mkdir -p $BUILDDIR && cd $BUILDDIR
    wget https://github.com/git/git/archive/v2.14.1.zip
    echo '846e55e4fd8501db71b6b57ff6a1554a8a19a2ac20dc4c0864eeaed50a481122  v2.14.1.zip' | sha256sum -c
    unzip v2.14.1.zip
    cd git-2.14.1
    INSTALLDIR=$BUILDDIR/install
    mkdir $INSTALLDIR
    make prefix=$INSTALLDIR all doc info
    # skipping `install-html` because who even uses that
    make prefix=$INSTALLDIR install install-doc install-info
    cd -
    rm -f ~/bin/git.bin
    ln -s $INSTALLDIR/bin ~/bin/git.bin
  fi

  ###
  ### GnuPG
  ###

  if [ "$1" == "all" -o "$1" == "server" -o "$1" == "gnupg" ]
  then
    sudo apt-get -y install libfltk1.3-dev zlib1g-dev
    BUILDDIR=$BUILDDIRBASE/gnupg
    rm -rf $BUILDDIR && mkdir -p $BUILDDIR && cd $BUILDDIR
    INSTALLDIR=$BUILDDIR/install
    mkdir tarballs && cd tarballs
    wget https://www.gnupg.org/ftp/gcrypt/gnupg/gnupg-2.2.5.tar.bz2 \
         https://www.gnupg.org/ftp/gcrypt/libgpg-error/libgpg-error-1.28.tar.bz2 \
         https://www.gnupg.org/ftp/gcrypt/libgcrypt/libgcrypt-1.8.2.tar.bz2 \
         https://www.gnupg.org/ftp/gcrypt/libksba/libksba-1.3.5.tar.bz2 \
         https://www.gnupg.org/ftp/gcrypt/libassuan/libassuan-2.5.1.tar.bz2 \
         https://www.gnupg.org/ftp/gcrypt/ntbtls/ntbtls-0.1.2.tar.bz2 \
         https://www.gnupg.org/ftp/gcrypt/npth/npth-1.5.tar.bz2 \
         https://www.gnupg.org/ftp/gcrypt/pinentry/pinentry-1.1.0.tar.bz2
    echo '3fa189a32d4fb62147874eb1389047c267d9ba088f57ab521cb0df46f08aef57  gnupg-2.2.5.tar.bz2
          47f96c37b4f2aac289f0bc1bacfa8bd8b4b209a488d3d15e2229cb6cc9b26449  libassuan-2.5.1.tar.bz2
          c8064cae7558144b13ef0eb87093412380efa16c4ee30ad12ecb54886a524c07  libgcrypt-1.8.2.tar.bz2
          3edb957744905412f30de3e25da18682cbe509541e18cd3b8f9df695a075da49  libgpg-error-1.28.tar.bz2
          41444fd7a6ff73a79ad9728f985e71c9ba8cd3e5e53358e70d5f066d35c1a340  libksba-1.3.5.tar.bz2
          294a690c1f537b92ed829d867bee537e46be93fbd60b16c04630fbbfcd9db3c2  npth-1.5.tar.bz2
          8240db84e50c2351b19eb8064bdfd4d25e3c157d37875c62e335df237d7bdce7  ntbtls-0.1.2.tar.bz2
          68076686fa724a290ea49cdf0d1c0c1500907d1b759a3bcbfbec0293e8f56570  pinentry-1.1.0.tar.bz2' | sha256sum -c
    for tarball in `ls *.tar.bz2`; do tar xjf $tarball; done
    rm *.tar.bz2
    # Something about the linking here is broken such that I can't run
    # gpg without setting LD_LIBRARY_PATH=$INSTALLDIR/lib at runtime
    cd libgpg-error* && ./configure --prefix=$INSTALLDIR && make && make install && cd -
    cd libgcrypt*    && ./configure --with-libgpg-error-prefix=$INSTALLDIR --prefix=$INSTALLDIR && make && make install && cd -
    cd libksba*      && ./configure --with-libgpg-error-prefix=$INSTALLDIR --prefix=$INSTALLDIR && make && make install && cd -
    cd libassuan*    && ./configure --with-libgpg-error-prefix=$INSTALLDIR --prefix=$INSTALLDIR && make && make install && cd -
    cd ntbtls*       && ./configure --with-libgpg-error-prefix=$INSTALLDIR --with-libgcrypt-prefix=$INSTALLDIR --with-ksba-prefix=$INSTALLDIR --prefix=$INSTALLDIR && make && make install && cd -
    cd npth*         && ./configure --prefix=$INSTALLDIR && make && make install && cd -
    cd pinentry*     && ./configure --with-libgpg-error-prefix=$INSTALLDIR --with-libassuan-prefix=$INSTALLDIR --prefix=$INSTALLDIR && make && make install && cd -
    cd gnupg*        && ./configure --with-libgpg-error-prefix=$INSTALLDIR --with-libgcrypt-prefix=$INSTALLDIR --with-libassuan-prefix=$INSTALLDIR --with-ksba-prefix=$INSTALLDIR --with-npth-prefix=$INSTALLDIR --with-ntbtls-prefix=$INSTALLDIR --prefix=$INSTALLDIR && make && make install && cd -

    cd ..
    rm -rf tarballs
    rm -f ~/bin/gnupg.bin
    ln -s $INSTALLDIR/bin ~/bin/gnupg.bin
  fi


  ###
  ### NodeJS
  ###

  if [ "$1" == "all" -o "$1" == "server" -o "$1" == "nodejs" ]
  then
    BUILDDIR=$BUILDDIRBASE/nodejs
    rm -rf $BUILDDIR && mkdir -p $BUILDDIR && cd $BUILDDIR
    wget https://nodejs.org/download/release/v9.6.1/node-v9.6.1-linux-x64.tar.xz
    echo 'd38f1707faccc54fae3cb201c25b02c4a3474d2c409c64f2a1d08925b238f8ad  node-v9.6.1-linux-x64.tar.xz' | \
        sha256sum -c
    bsdtar xJf node-v9.6.1-linux-x64.tar.xz
    rm -f ~/bin/nodejs.bin
    ln -s $BUILDDIR/node-v9.6.1-linux-x64/bin ~/bin/nodejs.bin
  fi

  ###
  ### PhantomJS
  ###

  if [ "$1" == "all" -o "$1" == "server" -o "$1" == "phantomjs" ]
  then
    BUILDDIR=$BUILDDIRBASE/phantomjs
    rm -rf $BUILDDIR && mkdir -p $BUILDDIR && cd $BUILDDIR
    wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2
    echo '86dd9a4bf4aee45f1a84c9f61cf1947c1d6dce9b9e8d2a907105da7852460d2f  ./phantomjs-2.1.1-linux-x86_64.tar.bz2' | \
        sha256sum -c
    bsdtar xf phantomjs-2.1.1-linux-x86_64.tar.bz2
    rm -f ~/bin/phantomjs
    ln -s $BUILDDIR/phantomjs-2.1.1-linux-x86_64/bin/phantomjs ~/bin/phantomjs
  fi

  ###
  ### Python 3
  ###

  if [ "$1" == "all" -o "$1" == "server" -o "$1" == "python3" ]
  then
    BUILDDIR=$BUILDDIRBASE/python3
    rm -rf $BUILDDIR && mkdir -p $BUILDDIR && cd $BUILDDIR
    wget https://www.python.org/ftp/python/3.6.4/Python-3.6.4.tgz
    echo '7dc453e1a93c083388eb1a23a256862407f8234a96dc4fae0fc7682020227486  Python-3.6.4.tgz' | \
        sha256sum -c
    tar xzf Python-3.6.4.tgz
    cd Python-3.6.4
    INSTALLDIR=$BUILDDIR/install/python-3.6.4
    ./configure --prefix=$INSTALLDIR && make && make install
    rm -f ~/bin/python3.bin
    ln -s $INSTALLDIR/bin ~/bin/python3.bin
  fi

  ###
  ### Java
  ###

  if [ "$1" == "all" -o "$1" == "server" -o "$1" == "java" ]
  then
    BUILDDIR=$BUILDDIRBASE/jdk
    rm -rf $BUILDDIR && mkdir -p $BUILDDIR && cd $BUILDDIR
    wget --header "Cookie: oraclelicense=accept-securebackup-cookie" \
         https://download.oracle.com/otn-pub/java/jdk/12+33/312335d836a34c7c8bba9d963e26dc23/jdk-12_linux-x64_bin.tar.gz
    echo '183d4d897bbf47bdae43b2bb4fc0465a9178209b5250555ac7fdb8fab6cc43a6  jdk-12_linux-x64_bin.tar.gz' | \
        sha256sum -c
    bsdtar xzf jdk-12_linux-x64_bin.tar.gz
    rm -f ~/bin/jdk.bin
    ln -s $BUILDDIR/jdk-12/bin ~/bin/jdk.bin
  fi

  ###
  ### Maven 3
  ###

  if [ "$1" == "all" -o "$1" == "server" -o "$1" == "maven" ]
  then
    BUILDDIR=$BUILDDIRBASE/maven
    rm -rf $BUILDDIR && mkdir -p $BUILDDIR && cd $BUILDDIR
    wget http://apache.mirrors.tds.net/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz
    echo '6e3e9c949ab4695a204f74038717aa7b2689b1be94875899ac1b3fe42800ff82  apache-maven-3.3.9-bin.tar.gz' | \
        sha256sum -c
    bsdtar xzf apache-maven-3.3.9-bin.tar.gz
    rm -f ~/bin/mvn
    ln -s $BUILDDIR/apache-maven-3.3.9/bin/mvn ~/bin/mvn
  fi

  ###
  ### Firefox
  ###

  if [ "$1" == "all" -o "$1" == "firefox" ]
  then
    BUILDDIR=$BUILDDIRBASE/firefox
    rm -rf $BUILDDIR && mkdir -p $BUILDDIR && cd $BUILDDIR
    wget http://ftp.mozilla.org/pub/firefox/releases/59.0/linux-x86_64/en-US/firefox-59.0.tar.bz2
    echo 'c2498690540fd0c7457d7f0a565af8e18e0bd7bcbb8ad47667ac37f15f1efd14  firefox-59.0.tar.bz2' | \
        sha256sum -c
    bsdtar xf firefox-59.0.tar.bz2
    rm -f ~/bin/firefox
    ln -s $BUILDDIR/firefox/firefox ~/bin/firefox
  fi

  ###
  ### jq
  ###

  if [ "$1" == "all" -o "$1" == "server" -o "$1" == "jq" ]
  then
    BUILDDIR=$BUILDDIRBASE/jq
    rm -rf $BUILDDIR && mkdir -p $BUILDDIR && cd $BUILDDIR
    wget https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64
    echo 'c6b3a7d7d3e7b70c6f51b706a3b90bd01833846c54d32ca32f0027f00226ff6d  jq-linux64' | \
        sha256sum -c
    EX=$BUILDDIR/jq-linux64
    chmod +x $EX
    rm -f ~/bin/jq
    ln -s $EX ~/bin/jq
  fi

  ###
  ### lein
  ###

  if [ "$1" == "all" -o "$1" == "server" -o "$1" == "lein" ]
  then
    BUILDDIR=$BUILDDIRBASE/lein
    rm -rf $BUILDDIR && mkdir -p $BUILDDIR && cd $BUILDDIR
    wget https://raw.githubusercontent.com/technomancy/leiningen/2.9.1/bin/lein
    echo '32acacc8354627724d27231bed8fa190d7df0356972e2fd44ca144c084ad4fc7  lein' | \
        sha256sum -c
    EX=$BUILDDIR/lein
    chmod +x $EX
    rm -f ~/bin/lein
    ln -s $EX ~/bin/lein
  fi

  ###
  ### Clojure
  ###

  if [ "$1" == "all" -o "$1" == "server" -o "$1" == "clojure" ]
  then
    BUILDDIR=$BUILDDIRBASE/clojure
    rm -rf $BUILDDIR && mkdir -p $BUILDDIR && cd $BUILDDIR
    wget https://download.clojure.org/install/clojure-tools-1.9.0.381.tar.gz
    echo 'f1266ba95784e594bb9b643258b417ef03b0e24b995ddb3a7514ae6daa7458a1  clojure-tools-1.9.0.381.tar.gz' | \
        sha256sum -c
    tar xzf clojure-tools-1.9.0.381.tar.gz
    cd clojure-tools
    ./install.sh $BUILDDIR
    cd -
    BIN=$BUILDDIR/bin
    rm -f ~/bin/clojure.bin
    ln -s $BIN ~/bin/clojure.bin
  fi

  ###
  ### dynamic-colors
  ###

  if [ "$1" == "all" -o "$1" == "dynamic-colors" ]
  then
    BUILDDIR=$BUILDDIRBASE/dynamic-colors
    rm -rf $BUILDDIR
    git clone git@github.com:gfredericks/dynamic-colors.git $BUILDDIR
    cd $BUILDDIR
    git checkout 55c539b48c92f43ea121f906ca1470762ddfe13b
    BIN=$BUILDDIR/bin
    rm -f ~/bin/dynamic-colors.bin
    ln -s $BIN ~/bin/dynamic-colors.bin
    rm -f ~/.dynamic-colors
    ln -s $BUILDDIR ~/.dynamic-colors
  fi

  shift
done

echo  $'\n\n---------------------\nInstalled successfully!'
